import {useState,useEffect,useCallback} from 'react';
import axios from 'axios';
import useLocalStorage from 'hooks/useLocalStorage';


export default url => {

const baseUrl = 'https://conduit.productionready.io/api/'    
const [isLoading,setIsLoading] = useState(false);
const [response,setResponse] = useState(null);
const [error,setError] = useState(null);
const [options,setOptions]= useState({});
const [token] = useLocalStorage('token');
  
const doFetch = useCallback((options={}) => {
    setOptions(options);
    setIsLoading(true);
},[])

const requestOptions = {
    ...options,
    ...{
        headers:{
            authorization: token ? `Token ${token}` : ''
        }
    }
}

useEffect(()=>{

    if(isLoading === false){
        return
    }


    axios(baseUrl+url,requestOptions)
    .then(res=>{
        console.log(res);
        setResponse(res.data);
        setIsLoading(false);
    })
    .catch(err=>{
    
        setError(err.response.data);
        setIsLoading(false)
    })

   
},[isLoading,url,requestOptions])

return [{isLoading, response, error},doFetch]
    
}