import useFetch from 'hooks/useFetch';
import {useEffect,useContext} from 'react';
import {CurrentUserContext} from 'contexts/CurrentUser';
import useLocalStorage from 'hooks/useLocalStorage';

const CurrentUserChecker = ({children})=>{
    const [,setCurrentUserState] = useContext(CurrentUserContext)
    const [{response},doFetch] = useFetch('/user');
    const [token] = useLocalStorage('token');

    useEffect(()=>{
        if(!token){
            setCurrentUserState(prev=>({
                ...prev,
                isLoggedIn: false
            }))
        }
        doFetch()
        setCurrentUserState(prev=>({
            ...prev,
            isLoading: true,
        }))
    },[doFetch,setCurrentUserState,token])

    useEffect(()=>{
        if(!response){
            return 
        }
        setCurrentUserState(state=>({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: response.user
        }))
    },[response,setCurrentUserState])
   
  return (children)  
}


export default CurrentUserChecker;