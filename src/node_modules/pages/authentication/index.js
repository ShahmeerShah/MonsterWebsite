import  React,{useState,useEffect,useContext} from 'react';
import {Link, Redirect} from 'react-router-dom';


import useFetch from 'hooks/useFetch'
import useLocalStorage from 'hooks/useLocalStorage';
import {CurrentUserContext} from 'contexts/CurrentUser';
import {BackendErrorMessages} from './components/BackendErrorMessages'


const Authentication = props =>{
    const isLogin = props.match.path === '/login'

    const pageTitle = isLogin ? 'Sign In' : 'Sign Up';
    const descriptionLink = isLogin ? '/register' : '/login';
    const descriptionText    = isLogin ? 'Need an account' : 'Already have an account';

    
    const [email,setEmail] = useState('');
    const [password,setPassword] = useState('');
    const [username,setUsername] = useState('')
    const apiUrl = isLogin ? 'users/login' : 'users';
    const [{isLoading,error,response},doFetch] = useFetch(apiUrl);
    const user = isLogin ? {email,password} : {email,password,username}
    const [,setToken] = useLocalStorage('token');
    const [isSuccessfulSubmit,setIsSuccessfulSubmit] = useState(false);
    const [,setCurrentUserState] = useContext(CurrentUserContext);
    console.log('error',error)
    
    

    const handleSubmit = (e) =>{
        e.preventDefault();
        doFetch({
            method: 'post',
            data:{
               user
            }
        })
        console.log(`values: ${email} and ${password} and ${username}`);
    }


    useEffect(() => {
        if(!response){
            return
        }

        console.log(response);
        // localStorage.setItem('token', response.user.token);
        setToken(response.user.token);
        setIsSuccessfulSubmit(true);
        setCurrentUserState(state=>(
            {
            ...state,
            isLoggedIn:true,
            isLoading:false,
            currentUser:response.user
            }

        ))
    },[response,setToken,setCurrentUserState])

    if(isSuccessfulSubmit){
       return <Redirect to="/" />    
    }
   

    return(
        <div className="auth-page">
            <div className="container page">
                <div className="row">
                    <div className="col-md-6 offset-md-3 col-xs-12">
                        <h1 className="text-xs-center">{pageTitle}</h1>
                        <p className="text-xs-center">
                            <Link to={descriptionLink}>{descriptionText}</Link>
                        </p>
                        {/* {error && error.errors.email} */}
                        {error && <BackendErrorMessages BackendErrors={error.errors} />}
                        <form onSubmit={handleSubmit}>
                            <fieldset>
                                <fieldset className="form-group">
                                    <input 
                                    type="email" 
                                    className="form-control form-control-lg" 
                                    placeholder="Email" 
                                    value={email} 
                                    onChange={(e)=>setEmail(e.target.value)}/>
                                </fieldset>
                                {isLogin === false && 

                                <fieldset className="form-group">
                                    <input 
                                    type="text" 
                                    className="form-control form-control-lg" 
                                    placeholder="Username" 
                                    value={username} 
                                    onChange={(e)=>setUsername(e.target.value)}/>
                                </fieldset>
                                
                                }
                                <fieldset className="form-group">
                                    <input 
                                    type="password" 
                                    className="form-control form-control-lg" 
                                    placeholder="Password"
                                    value={password}
                                    onChange={(e)=> setPassword(e.target.value)}/>
                                </fieldset>
                                <fieldset>
                                    <button className="btn btn-lg btn-primary pull-xs-right" type="submit" disabled={isLoading}>
                                        {pageTitle}
                                    </button>
                                </fieldset>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Authentication;